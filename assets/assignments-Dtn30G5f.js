const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/enrollments-3oX83C0U.js","assets/index-SvUTDYpM.js","assets/react-c0U51vzo.js","assets/firebase-Bz9ybdfi.js","assets/icons-C41eJsKq.js","assets/index-IxlbvR3_.css","assets/submissions-DoHwV8XX.js"])))=>i.map(i=>d[i]);
import{f as t,a as r,_ as s}from"./index-SvUTDYpM.js";import{q as n,w as e,d as o,e as a,v as i,f as c,k as u,u as d}from"./firebase-Bz9ybdfi.js";async function l(t){const r=(await f(t)).reduce((t,r)=>t+Number(r.weight||0),0),s=Math.max(0,Math.min(100,r));return{total:Math.round(100*s)/100,remaining:Math.max(0,Math.round(100*(100-s))/100)}}async function w(s){const n=r.currentUser;if(!n)throw new Error("Must be signed in");const e={...s,ownerId:n.uid,createdAt:Date.now()},a=await i(c(t,"courses",s.courseId)),d=a.exists()?a.data():null;if(!("category"===d?.gradingMode)){const{total:t}=await l(s.courseId),r=(t||0)+Number(s.weight||0);if(r>100.000001)throw new Error(`Total course weight would be ${r.toFixed(1)}%, which exceeds 100%. Reduce this assignment's weight or adjust others.`)}return(await u(o(t,"assignments"),e)).id}async function f(r){const s=n(o(t,"assignments"),e("courseId","==",r)),i=await a(s),c=[];return i.forEach(t=>c.push({id:t.id,...t.data()})),c}async function h(r){const s=await i(c(t,"assignments",r));return s.exists()?{id:s.id,...s.data()}:null}async function g(s,n){const e=r.currentUser;if(!e)throw new Error("Must be signed in");const o=await h(s);if(!o)throw new Error("Assignment not found");if(o.ownerId!==e.uid)throw new Error("You can only edit your own assignments");if(void 0!==n.weight&&o.courseId){const r=await i(c(t,"courses",o.courseId)),e=r.exists()?r.data():null;if(!("category"===e?.gradingMode)){const t=(await f(o.courseId)).filter(t=>t.id!==s).reduce((t,r)=>t+Number(r.weight||0),0)+Number(n.weight||0);if(t>100.000001)throw new Error(`Total course weight would be ${t.toFixed(1)}%, which exceeds 100%. Reduce this assignment's weight or adjust others.`)}}const a=c(t,"assignments",s);await d(a,{...n,updatedAt:Date.now()})}async function m(t){try{const{listEnrollmentsForStudent:n}=await s(async()=>{const{listEnrollmentsForStudent:t}=await import("./enrollments-3oX83C0U.js");return{listEnrollmentsForStudent:t}},__vite__mapDeps([0,1,2,3,4,5])),e=await n(t);if(0===e.length)return[];const o=e.map(t=>t.courseId),a=[];for(const t of o)try{const r=await f(t);a.push(...r)}catch(r){console.error(`Error fetching assignments for course ${t}:`,r)}const i=Date.now(),c=a.filter(t=>t.dueAt>i);return c.sort((t,r)=>t.dueAt-r.dueAt),c}catch(r){return console.error("Error getting assignments due for user:",r),[]}}async function E(t){try{const{listEnrollmentsForStudent:n}=await s(async()=>{const{listEnrollmentsForStudent:t}=await import("./enrollments-3oX83C0U.js");return{listEnrollmentsForStudent:t}},__vite__mapDeps([0,1,2,3,4,5])),e=await n(t);if(0===e.length)return[];const o=e.map(t=>t.courseId),a=[];for(const t of o)try{const r=await f(t);a.push(...r)}catch(r){console.error(`Error fetching assignments for course ${t}:`,r)}const i=Date.now(),c=a.filter(t=>t.dueAt<i);return c.sort((t,r)=>r.dueAt-t.dueAt),c}catch(r){return console.error("Error getting overdue assignments for user:",r),[]}}async function _(t){try{const{listEnrollmentsForStudent:n}=await s(async()=>{const{listEnrollmentsForStudent:t}=await import("./enrollments-3oX83C0U.js");return{listEnrollmentsForStudent:t}},__vite__mapDeps([0,1,2,3,4,5])),e=await n(t);if(0===e.length)return 0;const o=e.map(t=>t.courseId),a=[];for(const t of o)try{const r=await f(t);a.push(...r)}catch(r){console.error(`Error fetching assignments for course ${t}:`,r)}if(0===a.length)return 0;const{listSubmissions:i}=await s(async()=>{const{listSubmissions:t}=await import("./submissions-DoHwV8XX.js");return{listSubmissions:t}},__vite__mapDeps([6,3,1,2,4,5]));let c=0,u=0;for(const s of a)try{const r=(await i(s.id)).find(r=>r.studentId===t);if(r&&null!==r.grade.points&&void 0!==r.grade.points){c+=r.grade.points/s.maxPoints*100*s.weight,u+=s.weight}}catch(r){console.error(`Error fetching submissions for assignment ${s.id}:`,r)}return 0===u?0:Math.round(c/u*100)/100}catch(r){return console.error("Error calculating overall grade for user:",r),0}}async function y(t){try{const{listEnrollmentsForStudent:n}=await s(async()=>{const{listEnrollmentsForStudent:t}=await import("./enrollments-3oX83C0U.js");return{listEnrollmentsForStudent:t}},__vite__mapDeps([0,1,2,3,4,5])),e=await n(t);if(0===e.length)return 0;const{collection:o,getDocs:a,query:i,where:c}=await s(async()=>{const{collection:t,getDocs:r,query:s,where:n}=await import("./firebase-Bz9ybdfi.js").then(t=>t.D);return{collection:t,getDocs:r,query:s,where:n}},[]),{db:u}=await s(async()=>{const{db:t}=await import("./index-SvUTDYpM.js").then(t=>t.o);return{db:t}},__vite__mapDeps([1,2,3,4,5])),d=e.map(t=>t.courseId),l=[];for(const t of d)try{const r=i(o(u,"classSessions"),c("courseId","==",t));(await a(r)).forEach(t=>{l.push({id:t.id,courseId:t.data().courseId})})}catch(r){console.error(`Error fetching class sessions for course ${t}:`,r)}if(0===l.length)return 100;let w=0,f=0;for(const s of l)try{const r=i(o(u,"attendance"),c("sessionId","==",s.id),c("studentId","==",t)),n=await a(r);if(!n.empty){const t=n.docs[0].data();w++,"present"!==t.status&&"late"!==t.status||f++}}catch(r){console.error(`Error fetching attendance for session ${s.id}:`,r)}return 0===w?100:Math.round(f/w*100)}catch(r){return console.error("Error calculating attendance for user:",r),0}}export{E as a,y as b,_ as c,l as d,w as e,h as f,m as g,f as l,g as u};
